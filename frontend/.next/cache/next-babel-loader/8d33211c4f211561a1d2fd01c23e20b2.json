{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/WebDEV/C O U R S E S/ecommerce-wesbos/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\WebDEV\\\\C O U R S E S\\\\ecommerce-wesbos\\\\frontend\\\\pages\\\\order\\\\[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n   query SINGLE_ORDER_QUERY($id: ID!) {\\n      order: Order(where: { id: $id }) {\\n         id\\n         charge\\n         total\\n         user {\\n            id\\n         }\\n         items {\\n            id\\n            name\\n            description\\n            price\\n            quantity\\n            photo {\\n               image {\\n                  publicUrlTransformed\\n               }\\n            }\\n         }\\n      }\\n   }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport formatMoney from '../../lib/formatMoney';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 22\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Item Count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo.image.publicUrlTransformed,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 22\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qty: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 22\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Each: \", formatMoney(item.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 22\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sub Total: \", formatMoney(item.price * item.quantity)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 22\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 22\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, _this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SingleOrderPage, \"CuHRCfz+crOnqHRn77Zwm0zVZFo=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["C:/WebDEV/C O U R S E S/ecommerce-wesbos/frontend/pages/order/[id].js"],"names":["useQuery","gql","useRouter","Head","ErrorMessage","OrderStyles","formatMoney","SINGLE_ORDER_QUERY","SingleOrderPage","router","id","query","variables","data","error","loading","order","charge","total","items","length","map","item","photo","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport OrderStyles from '../../components/styles/OrderStyles';\r\nimport formatMoney from '../../lib/formatMoney';\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n   query SINGLE_ORDER_QUERY($id: ID!) {\r\n      order: Order(where: { id: $id }) {\r\n         id\r\n         charge\r\n         total\r\n         user {\r\n            id\r\n         }\r\n         items {\r\n            id\r\n            name\r\n            description\r\n            price\r\n            quantity\r\n            photo {\r\n               image {\r\n                  publicUrlTransformed\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nexport default function SingleOrderPage() {\r\n   const router = useRouter();\r\n   const { id } = router.query;\r\n   const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\r\n      variables: { id },\r\n   });\r\n   if (loading) return <p>Loading...</p>;\r\n   if (error) return <ErrorMessage error={error} />;\r\n   const { order } = data;\r\n   return (\r\n      <OrderStyles>\r\n         <Head>\r\n            <title>Sick Fits - {order.id}</title>\r\n         </Head>\r\n         <p>\r\n            <span>Order Id:</span>\r\n            <span>{order.id}</span>\r\n         </p>\r\n         <p>\r\n            <span>Charge:</span>\r\n            <span>{order.charge}</span>\r\n         </p>\r\n         <p>\r\n            <span>Order Total:</span>\r\n            <span>{formatMoney(order.total)}</span>\r\n         </p>\r\n         <p>\r\n            <span>Item Count:</span>\r\n            <span>{order.items.length}</span>\r\n         </p>\r\n         <div className=\"items\">\r\n            {order.items.map((item) => (\r\n               <div className=\"order-item\" key={item.id}>\r\n                  <img\r\n                     src={item.photo.image.publicUrlTransformed}\r\n                     alt={item.title}\r\n                  />\r\n                  <div className=\"items-details\">\r\n                     <h2>{item.name}</h2>\r\n                     <p>Qty: {item.quantity}</p>\r\n                     <p>Each: {formatMoney(item.price)}</p>\r\n                     <p>Sub Total: {formatMoney(item.price * item.quantity)}</p>\r\n                     <p>{item.description}</p>\r\n                  </div>\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </OrderStyles>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}