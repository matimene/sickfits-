{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WebDEV\\\\C O U R S E S\\\\ecommerce-wesbos\\\\frontend\\\\components\\\\SignIn.js\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\nconst SIGNIN_MUTATION = gql`\n   mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n      authenticateUserWithPassword(email: $email, password: $password) {\n         ... on UserAuthenticationWithPasswordSuccess {\n            item {\n               id\n               email\n               name\n            }\n         }\n         ... on UserAuthenticationWithPasswordFailure {\n            code \n            message\n         }\n      }\n   }\n`;\nexport default function SignIn() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [signIn, {\n    data,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await signIn();\n    resetForm();\n  }\n\n  const error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === 'UserAuthenticationWithPasswordFailure' ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your email adress\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["C:/WebDEV/C O U R S E S/ecommerce-wesbos/frontend/components/SignIn.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","DisplayError","SIGNIN_MUTATION","SignIn","inputs","handleChange","resetForm","email","password","signIn","data","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","error","authenticateUserWithPassword","__typename","undefined"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,eAAe,GAAGN,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASO,MAAT,GAAkB;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCP,OAAO,CAAC;AACjDQ,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,QAAQ,EAAE;AAFuC,GAAD,CAAnD;AAIA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAT,IAA8Bd,WAAW,CAACK,eAAD,EAAkB;AAC9DU,IAAAA,SAAS,EAAER,MADmD;AAE9DS,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEd;AAAT,KAAD;AAF8C,GAAlB,CAA/C;;AAKA,iBAAee,YAAf,CAA4BC,CAA5B,EAA+B;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMR,MAAM,EAAZ;AACAH,IAAAA,SAAS;AACX;;AACD,QAAMY,KAAK,GACR,CAAAR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,4BAAN,CAAmCC,UAAnC,MACA,uCADA,GAEKV,IAFL,aAEKA,IAFL,uBAEKA,IAAI,CAAES,4BAFX,GAGKE,SAJR;AAMA,sBACG,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEN,YAA9B;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEG;AAArB;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG;AAAA,8BACG;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEG;AACG,UAAA,IAAI,EAAC,OADR;AAEG,UAAA,IAAI,EAAC,OAFR;AAGG,UAAA,WAAW,EAAC,mBAHf;AAIG,UAAA,YAAY,EAAC,OAJhB;AAKG,UAAA,KAAK,EAAEd,MAAM,CAACG,KALjB;AAMG,UAAA,QAAQ,EAAEF;AANb;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAYG;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,yCAEG;AACG,UAAA,IAAI,EAAC,UADR;AAEG,UAAA,IAAI,EAAC,UAFR;AAGG,UAAA,WAAW,EAAC,UAHf;AAIG,UAAA,YAAY,EAAC,UAJhB;AAKG,UAAA,KAAK,EAAED,MAAM,CAACI,QALjB;AAMG,UAAA,QAAQ,EAAEH;AANb;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAZH,eAuBG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA+BF","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport DisplayError from './ErrorMessage';\r\n\r\nconst SIGNIN_MUTATION = gql`\r\n   mutation SIGNIN_MUTATION($email: String!, $password: String!) {\r\n      authenticateUserWithPassword(email: $email, password: $password) {\r\n         ... on UserAuthenticationWithPasswordSuccess {\r\n            item {\r\n               id\r\n               email\r\n               name\r\n            }\r\n         }\r\n         ... on UserAuthenticationWithPasswordFailure {\r\n            code \r\n            message\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nexport default function SignIn() {\r\n   const { inputs, handleChange, resetForm } = useForm({\r\n      email: '',\r\n      password: '',\r\n   });\r\n   const [signIn, { data, loading }] = useMutation(SIGNIN_MUTATION, {\r\n      variables: inputs,\r\n      refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n   });\r\n\r\n   async function handleSubmit(e) {\r\n      e.preventDefault();\r\n      await signIn();\r\n      resetForm();\r\n   }\r\n   const error =\r\n      data?.authenticateUserWithPassword.__typename ===\r\n      'UserAuthenticationWithPasswordFailure'\r\n         ? data?.authenticateUserWithPassword\r\n         : undefined;\r\n\r\n   return (\r\n      <Form method=\"POST\" onSubmit={handleSubmit}>\r\n         <h2>Sign Into Your Account</h2>\r\n         <DisplayError error={error} />\r\n         <fieldset>\r\n            <label htmlFor=\"email\">\r\n               Email\r\n               <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Your email adress\"\r\n                  autoComplete=\"email\"\r\n                  value={inputs.email}\r\n                  onChange={handleChange}\r\n               />\r\n            </label>\r\n            <label htmlFor=\"password\">\r\n               Email\r\n               <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  autoComplete=\"password\"\r\n                  value={inputs.password}\r\n                  onChange={handleChange}\r\n               />\r\n            </label>\r\n            <button type=\"submit\">Sign In!</button>\r\n         </fieldset>\r\n      </Form>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}