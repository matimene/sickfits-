{"ast":null,"code":"import { PAGINATION_QUERY } from '../components/Pagination';\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n\n    // Tells apollo we will take care of everything\n    read(existing = [], {\n      args,\n      cache\n    }) {\n      var _data$_allProductsMet;\n\n      // First thing it does is ask the read fn for those items\n      const {\n        skip,\n        first\n      } = args;\n      const data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      const count = data === null || data === void 0 ? void 0 : (_data$_allProductsMet = data._allProductsMeta) === null || _data$_allProductsMet === void 0 ? void 0 : _data$_allProductsMet.count;\n    },\n\n    merge() {// This runs when apollo client comes back from the network with our products\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/WebDEV/C O U R S E S/ecommerce-wesbos/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","skip","first","data","readQuery","query","count","_allProductsMeta","merge"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACvC,SAAO;AACJC,IAAAA,OAAO,EAAE,KADL;;AACY;AAChBC,IAAAA,IAAI,CAACC,QAAQ,GAAG,EAAZ,EAAgB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB,EAAiC;AAAA;;AAClC;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBH,IAAxB;AACA,YAAMI,IAAI,GAAGH,KAAK,CAACI,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAhB,CAAb;AACA,YAAMY,KAAK,GAAGH,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEI,gBAAT,0DAAG,sBAAwBD,KAAtC;AACF,KAPG;;AAQJE,IAAAA,KAAK,GAAG,CACL;AACF;;AAVG,GAAP;AAYF","sourcesContent":["import { PAGINATION_QUERY } from '../components/Pagination';\r\n\r\nexport default function paginationField() {\r\n   return {\r\n      keyArgs: false, // Tells apollo we will take care of everything\r\n      read(existing = [], { args, cache }) {\r\n         // First thing it does is ask the read fn for those items\r\n         const { skip, first } = args;\r\n         const data = cache.readQuery({ query: PAGINATION_QUERY });\r\n         const count = data?._allProductsMeta?.count;\r\n      },\r\n      merge() {\r\n         // This runs when apollo client comes back from the network with our products\r\n      },\r\n   };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}