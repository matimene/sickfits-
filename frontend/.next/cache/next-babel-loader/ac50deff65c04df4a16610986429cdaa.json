{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WebDEV\\\\C O U R S E S\\\\ecommerce-wesbos\\\\frontend\\\\pages\\\\orders.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\nimport formatMoney from '../lib/formatMoney';\nconst USER_ORDERS_QUERY = gql`\n   query USER_ORDERS_QUERY {\n      allOrders {\n         id\n         charge\n         total\n         user {\n            id\n         }\n         items {\n            id\n            name\n            description\n            price\n            quantity\n            photo {\n               image {\n                  publicUrlTransformed\n               }\n            }\n         }\n      }\n   }\n`;\nconst OrderUl = styled.ul.withConfig({\n  displayName: \"orders__OrderUl\",\n  componentId: \"sc-15udvsj-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(350px),1fr);grid-gap:4rem;\"]);\n\nfunction countItemsInAnOrder(order) {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nexport default function OrdersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 22\n  }, this);\n  let {\n    allOrders\n  } = data;\n  if (allOrders && !allOrders.length) allOrders = [allOrders];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Your Orders (\", allOrders.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/order/${order.id}`,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [countItemsInAnOrder(order), \" Items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [order.items.length, \" Product\", order.items.length = 1 ? '' : 's']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatMoney(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"images\",\n              children: order.items.map(item => {\n                var _item$photo, _item$photo$image;\n\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_item$photo = item.photo) === null || _item$photo === void 0 ? void 0 : (_item$photo$image = _item$photo.image) === null || _item$photo$image === void 0 ? void 0 : _item$photo$image.publicUrlTransformed,\n                  alt: item.name\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 31\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["C:/WebDEV/C O U R S E S/ecommerce-wesbos/frontend/pages/orders.js"],"names":["useQuery","gql","useRouter","Head","styled","Link","ErrorMessage","OrderItemStyles","formatMoney","USER_ORDERS_QUERY","OrderUl","ul","countItemsInAnOrder","order","items","reduce","tally","item","quantity","OrdersPage","data","error","loading","allOrders","length","map","id","total","photo","image","publicUrlTransformed","name"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\r\nimport formatMoney from '../lib/formatMoney';\r\n\r\nconst USER_ORDERS_QUERY = gql`\r\n   query USER_ORDERS_QUERY {\r\n      allOrders {\r\n         id\r\n         charge\r\n         total\r\n         user {\r\n            id\r\n         }\r\n         items {\r\n            id\r\n            name\r\n            description\r\n            price\r\n            quantity\r\n            photo {\r\n               image {\r\n                  publicUrlTransformed\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nconst OrderUl = styled.ul`\r\n   display: grid;\r\n   grid-template-columns: repeat(auto-fit, minmax(350px), 1fr);\r\n   grid-gap: 4rem;\r\n`;\r\n\r\nfunction countItemsInAnOrder(order) {\r\n   return order.items.reduce((tally, item) => tally + item.quantity, 0);\r\n}\r\n\r\nexport default function OrdersPage() {\r\n   const { data, error, loading } = useQuery(USER_ORDERS_QUERY);\r\n   if (loading) return <p>Loading...</p>;\r\n   if (error) return <ErrorMessage error={error} />;\r\n   let { allOrders } = data;\r\n   if (allOrders && !allOrders.length) allOrders = [allOrders];\r\n   return (\r\n      <div>\r\n         <Head>\r\n            <title>Your Orders ({allOrders.length})</title>\r\n         </Head>\r\n         <h2>You have {allOrders.length} orders!</h2>\r\n         <OrderUl>\r\n            {allOrders.map((order) => (\r\n               <OrderItemStyles>\r\n                  <Link href={`/order/${order.id}`}>\r\n                     <>\r\n                        <div className=\"order-meta\">\r\n                           <p>{countItemsInAnOrder(order)} Items</p>\r\n                           <p>\r\n                              {order.items.length} Product\r\n                              {(order.items.length = 1 ? '' : 's')}\r\n                           </p>\r\n                           <p>{formatMoney(order.total)}</p>\r\n                        </div>\r\n                        <div className=\"images\">\r\n                           {order.items.map((item) => (\r\n                              <img\r\n                                 key={item.id}\r\n                                 src={item.photo?.image?.publicUrlTransformed}\r\n                                 alt={item.name}\r\n                              />\r\n                           ))}\r\n                        </div>\r\n                     </>\r\n                  </Link>\r\n               </OrderItemStyles>\r\n            ))}\r\n         </OrderUl>\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}